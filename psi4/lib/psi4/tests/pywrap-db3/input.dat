#! Test that Python Molecule class processes geometry like psi4 Molecule class.

ref_nre = 268.6171792624 #TEST
ref_geom = psi4.Matrix.from_list(
      [[   0.710500000000,    -0.794637665924,    -1.230622098778],
       [   1.421000000000,    -0.794637665924,     0.000000000000],
       [   0.710500000000,    -0.794637665924,     1.230622098778],
       [  -0.710500000000,    -0.794637665924,     1.230622098778],
       [   1.254500000000,    -0.794637665924,    -2.172857738095],
       [  -1.254500000000,    -0.794637665924,     2.172857738095],
       [  -0.710500000000,    -0.794637665924,    -1.230622098778],
       [  -1.421000000000,    -0.794637665924,     0.000000000000],
       [   2.509000000000,    -0.794637665924,     0.000000000000],
       [   1.254500000000,    -0.794637665924,     2.172857738095],
       [  -1.254500000000,    -0.794637665924,    -2.172857738095],
       [  -2.509000000000,    -0.794637665924,     0.000000000000],
       [   0.000000000000,     3.205362334076,     0.000000000000],
       [   0.494974746831,     3.555362334076,    -0.857321409974],
       [   0.494974746831,     3.555362334076,     0.857321409974],
       [  -0.989949493661,     3.555362334076,     0.000000000000]])


set basis 6-31G*

banner('PSI4 Molecule Parsing')
molecule dimer {
1 1
# This part is just a normal Cartesian geometry specification for benzene
C          0.710500000000    -0.794637665924    -1.230622098778
C          1.421000000000    -0.794637665924     0.000000000000
C          0.710500000000    -0.794637665924     1.230622098778
C         -0.710500000000    -0.794637665924     1.230622098778
H          1.254500000000    -0.794637665924    -2.172857738095
H         -1.254500000000    -0.794637665924     2.172857738095
C         -0.710500000000    -0.794637665924    -1.230622098778
C         -1.421000000000    -0.794637665924     0.000000000000
H          2.509000000000    -0.794637665924     0.000000000000
H          1.254500000000    -0.794637665924     2.172857738095
H         -1.254500000000    -0.794637665924    -2.172857738095
H         -2.509000000000    -0.794637665924     0.000000000000
# And the hydronium part is specified using a zmatrix, referencing the benzene coordinates
X  1  CC  3  30   2  A2
O  13 R   1  90   2  90
H  14 OH  13 TDA  1  0
H  14 OH  15 TDA  13 A1
H  14 OH  15 TDA  13 -A1

CC    = 1.421
CH    = 1.088
A1    = 120.0
A2    = 180.0
OH    = 1.05
R     = 4.0
units angstrom
}

dimer.update_geometry()
dimer.print_out()
compare_values(ref_nre, dimer.nuclear_repulsion_energy(), 9, "PSI4: Nuclear repulsion energy")   #TEST
geom_now = dimer.geometry()
geom_now.scale(psi_bohr2angstroms)
compare_matrices(ref_geom, geom_now, 8, "PSI4: geometry and orientation")                        #TEST


banner('QCDB Molecule Parsing')
YYY = qcdb.Molecule("""
1 1
# This part is just a normal Cartesian geometry specification for benzene
C          0.710500000000    -0.794637665924    -1.230622098778
C          1.421000000000    -0.794637665924     0.000000000000
C          0.710500000000    -0.794637665924     1.230622098778
C         -0.710500000000    -0.794637665924     1.230622098778
H          1.254500000000    -0.794637665924    -2.172857738095
H         -1.254500000000    -0.794637665924     2.172857738095
C         -0.710500000000    -0.794637665924    -1.230622098778
C         -1.421000000000    -0.794637665924     0.000000000000
H          2.509000000000    -0.794637665924     0.000000000000
H          1.254500000000    -0.794637665924     2.172857738095
H         -1.254500000000    -0.794637665924    -2.172857738095
H         -2.509000000000    -0.794637665924     0.000000000000
# And the hydronium part is specified using a zmatrix, referencing the benzene coordinates
X  1  CC  3  30   2  A2
O  13 R   1  90   2  90
H  14 OH  13 TDA  1  0
H  14 OH  15 TDA  13 A1
H  14 OH  15 TDA  13 -A1

CC    = 1.421
CH    = 1.088
A1    = 120.0
A2    = 180.0
OH    = 1.05
R     = 4.0
units angstrom
""")

YYY.update_geometry()
compare_values(ref_nre, YYY.nuclear_repulsion_energy(), 9, "QCDB: Nuclear repulsion energy")   #TEST
geom_now = psi4.Matrix.from_list(YYY.geometry())
geom_now.scale(psi_bohr2angstroms)
compare_matrices(ref_geom, geom_now, 8, "QCDB: geometry and orientation")                        #TEST

