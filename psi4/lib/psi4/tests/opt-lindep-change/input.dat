#! Make sure job doesn't crash if number of MO's changes during optimization
#! Choose S_TOLERANCE such that the number of linear dependencies will drop
#! (and the number of retained MO's will rise) when we are on the second
#! geometry step.  Formerly this caused a LIBPSIO TOC overwrite error.
#! Now it shouldn't because we just make an all-new file32 checkpoint 
#! file after each SCF run.  David Sherrill 3/19/14.  
#! This is just for internal testing, not a good example.  !nosample

refenergy = -257.9314039622615837

molecule Ne2 {
  Ne 
  Ne 1 R

  R = 2.0
}
set basis aug-cc-pvtz
set s_tolerance 1.4E-2          #unusually large, chosen to get nmo to change
set geom_maxiter 3
try:
    optimize("b3lyp")
except ConvergenceError:
    pass

# comparison aginst ref might change if optimizer changes; 
# if that happens just compare fewer digits or update the refenergy. 
# The key question is just whether or not the computation fails.
compare_values(refenergy, variable("DFT TOTAL ENERGY"), 2, "Reference energy") #TEST

# clean up scratch since optimization ended abruptly
psi4_io.set_specific_retention(1, False)
clean()
