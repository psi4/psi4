#! RI-SCF cc-pVTZ energy of water, with Z-matrix input and cc-pVTZ-RI auxilliary basis.

nucenergy =   8.8014655646      #TEST
refenergy = -76.05098620307962  #TEST

molecule h2o {
    O
    H 1 1.0
    H 1 1.0 2 104.5
}

set {
  basis        cc-pVTZ
  scf_type     df
  e_convergence   10
  maxiter  6
}


try:
    if psi4.core.get_option("scf", "orbital_optimizer_package") == "INTERNAL":
        energy('hf')
except psi4.SCFConvergenceError as ex:
    SCF_iter_6 = ex.wfn.get_energies("Total Energy")
    SCF_error_iter = ex.iteration
    SCF_e_conv = ex.e_conv
    SCF_d_conv = ex.d_conv

if psi4.core.get_option("scf", "orbital_optimizer_package") == "INTERNAL":
    compare_values(-76.050986, SCF_iter_6, 5, "Energy at iter {}".format(SCF_error_iter))

set maxiter 24

thisenergy = energy('scf')

compare_values(nucenergy, h2o.nuclear_repulsion_energy(), 9, "Nuclear repulsion energy") #TEST
compare_values(refenergy, thisenergy, 9, "Reference energy")                             #TEST

n_iter = int(variable("scf iterations"))
ok_iter = (n_iter > 7) and (n_iter < 12)
compare(True, ok_iter, f"Iteration Count {n_iter}")

scf_enes = variable("scf total energies")
if psi4.core.get_option("scf", "orbital_optimizer_package") == "INTERNAL":
    compare_values(refenergy, scf_enes[n_iter], 9, "Energies stored")
