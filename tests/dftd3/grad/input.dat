#! DF-BP86-D2 cc-pVDZ frozen core gradient of S22 HCN, calling Grimme's dftd3 program for -D2 gradients

ref = psi4.Matrix.from_list([                                             #TEST
             [  0.000471372941,    -0.006768222864,     0.000000000000],  #TEST
             [  0.000447936019,    -0.006988081177,    -0.000000000000],  #TEST
             [ -0.000919105947,     0.013753536153,    -0.000000000000]]) #TEST

molecule {
  0 1
  N    -0.0034118    3.5353926    0.0000000
  C     0.0751963    2.3707040    0.0000000
  H     0.1476295    1.3052847    0.0000000
}


set {
    scf_type      df
    basis         cc-pvdz
    freeze_core   true
    dft_radial_points     99
    dft_spherical_points  302
    e_convergence 8
    d_convergence 8
}

grad = gradient('bp86-d2', engine='libdisp')
compare_matrices(ref, grad, 7, "Outsourced dft gradients called by name: libdisp")  #TEST
clean()

grad = gradient('bp86-d2', engine='dftd3')
compare_matrices(ref, grad, 7, "Outsourced dft gradients called by name: dftd3")  #TEST

molecule atoms {
  @He
  Ne 1 1.0
}

E, G = atoms.run_dftd3('bp86-d3(bj)')
compare_values(0.0, E, 7, "One-real-one-ghost-atom energy")  #TEST
import numpy as np  #TEST
compare_arrays(np.zeros((2, 3)), G, 7, "One-real-one-ghost-atom gradient")  #TEST
