#! Exercises the various DFT-D corrections, both through python directly and through c++

ref_d2         = [-0.00390110, -0.00165271, -0.00058118]  #TEST
ref_d3zero     = [-0.00285088, -0.00084340, -0.00031923]  #TEST
ref_d3bj       = [-0.00784595, -0.00394347, -0.00226683]  #TEST

ref_pbe_d2     = [-0.00278650, -0.00118051, -0.00041513]  #TEST
ref_pbe_d3zero = [-0.00175474, -0.00045421, -0.00016839]  #TEST
ref_pbe_d3bj   = [-0.00475937, -0.00235265, -0.00131239]  #TEST

molecule eneyne {
C   0.000000  -0.667578  -2.124659
C   0.000000   0.667578  -2.124659
H   0.923621  -1.232253  -2.126185
H  -0.923621  -1.232253  -2.126185
H  -0.923621   1.232253  -2.126185
H   0.923621   1.232253  -2.126185
--
C   0.000000   0.000000   2.900503
C   0.000000   0.000000   1.693240
H   0.000000   0.000000   0.627352
H   0.000000   0.000000   3.963929
}

print('  -D correction from Py-side')                      #TEST
eneyne.update_geometry()
E, G = eneyne.run_dftd3('b3lyp', 'd2')
compare_values(ref_d2[0], E, 7, 'Ethene-Ethyne -D2')              #TEST
mA = eneyne.extract_subsets(1)
E, G = mA.run_dftd3('b3lyp', 'd2')
compare_values(ref_d2[1], E, 7, 'Ethene -D2')                     #TEST
mB = eneyne.extract_subsets(2)
E, G = mB.run_dftd3('b3lyp', 'd2')
compare_values(ref_d2[2], E, 7, 'Ethyne -D2')                     #TEST
#mBcp = eneyne.extract_subsets(2,1)                               #TEST
#E, G = mBcp.run_dftd3('b3lyp')                                   #TEST
#compare_values(ref_d2[2], E, 7, 'Ethyne(CP) -D2')                #TEST

E, G = eneyne.run_dftd3('b3lyp', 'd3zero')
compare_values(ref_d3zero[0], E, 7, 'Ethene-Ethyne -D3 (zero)')   #TEST
mA = eneyne.extract_subsets(1)
E, G = mA.run_dftd3('b3lyp', 'd3zero')
compare_values(ref_d3zero[1], E, 7, 'Ethene -D3 (zero)')          #TEST
mB = eneyne.extract_subsets(2)
E, G = mB.run_dftd3('b3lyp', 'd3zero')
compare_values(ref_d3zero[2], E, 7, 'Ethyne -D3 (zero)')          #TEST

E, G = eneyne.run_dftd3('b3lyp', 'd3bj')
compare_values(ref_d3bj[0], E, 7, 'Ethene-Ethyne -D3 (bj)')       #TEST
mA = eneyne.extract_subsets(1)
E, G = mA.run_dftd3('b3lyp', 'd3bj')
compare_values(ref_d3bj[1], E, 7, 'Ethene -D3 (bj)')              #TEST
mB = eneyne.extract_subsets(2)
E, G = mB.run_dftd3('b3lyp', 'd3bj')
compare_values(ref_d3bj[2], E, 7, 'Ethyne -D3 (bj)')              #TEST

E, G = eneyne.run_dftd3('b3lyp', 'd3')
compare_values(ref_d3zero[0], E, 7, 'Ethene-Ethyne -D3 (alias)')  #TEST
E, G = eneyne.run_dftd3('b3lyp', 'd')
compare_values(ref_d2[0], E, 7, 'Ethene-Ethyne -D (alias)')       #TEST
E, G = eneyne.run_dftd3('b3lyp', 'd2')
compare_values(ref_d2[0], E, 7, 'Ethene-Ethyne -D2 (alias)')      #TEST

set basis sto-3g
set scf_type df
set dft_radial_points 50  # use really bad grid for speed since all we want is the -D value
set dft_spherical_points 110
#set scf print 3  # will print dftd3 program output to psi4 output file


print('  -D correction from C-side')                                                                         #TEST
activate(mA)
energy('b3lyp-d2', engine='libdisp')
compare_values(ref_d2[1], variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling psi4 Disp class)')  #TEST
energy('b3lyp-d2', engine='dftd3')
compare_values(ref_d2[1], variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling dftd3 -old)')       #TEST
energy('b3lyp-d3zero')
compare_values(ref_d3zero[1], variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -zero)')  #TEST
energy('b3lyp-d3bj')
compare_values(ref_d3bj[1], variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -bj)')      #TEST

energy('b3lyp-d2')
compare_values(ref_d2[1], variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (alias)')                    #TEST
energy('b3lyp-d3')
compare_values(ref_d3zero[1], variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (alias)')                #TEST
energy('b3lyp-d')
compare_values(ref_d2[1], variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D (alias)')                     #TEST
energy('wb97x-d')
compare_values(-0.000834247063, variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene wb97x-d (chg)')            #TEST

print('  non-default -D correction from C-side')                                                                 #TEST
activate(mB)
set dft_dispersion_parameters [0.75]
energy('b3lyp-d', engine='libdisp')
compare_values(ref_pbe_d2[2], variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling psi4 Disp class)')  #TEST
set dft_dispersion_parameters [0.75, 20.0]
energy('b3lyp-d2', engine='dftd3')
compare_values(ref_pbe_d2[2], variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (calling dftd3 -old)')       #TEST
set dft_dispersion_parameters [1.0,  0.722, 1.217, 14.0]
energy('b3lyp-d3zero')
compare_values(ref_pbe_d3zero[2], variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -zero)')  #TEST
set dft_dispersion_parameters [1.000, 0.7875, 0.4289, 4.4407]
energy('b3lyp-d3(bj)')
compare_values(ref_pbe_d3bj[2], variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -bj)')      #TEST

set dft_dispersion_parameters [0.75]
energy('b3lyp-d2')
compare_values(ref_pbe_d2[2], variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2 (alias)')                    #TEST
set dft_dispersion_parameters [1.0,  0.722, 1.217, 14.0]
energy('b3lyp-d3')
compare_values(ref_pbe_d3zero[2], variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (alias)')                #TEST
set dft_dispersion_parameters [0.75]
energy('b3lyp-d')
compare_values(ref_pbe_d2[2], variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D (alias)')                     #TEST
activate(mA)
set dft_dispersion_parameters [1.0]
energy('wb97x-d')
compare_values(-0.000834247063, variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene wb97x-d (chg)')                #TEST

print('  non-default -D correction from Py-side')                                                         #TEST
eneyne.update_geometry()
eneyne.run_dftd3('b3lyp', 'd2', {'s6': 0.75})
compare_values(ref_pbe_d2[0], variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene-Ethyne -D2')              #TEST
mA = eneyne.extract_subsets(1)
mA.run_dftd3('b3lyp', 'd2', {'s6': 0.75})
compare_values(ref_pbe_d2[1], variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D2')                     #TEST
mB = eneyne.extract_subsets(2)
mB.run_dftd3('b3lyp', 'd2', {'s6': 0.75})
compare_values(ref_pbe_d2[2], variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethyne -D2')                     #TEST

eneyne.run_dftd3('b3lyp', 'd3zero', {'s6': 1.0,  's8': 0.722, 'sr6': 1.217, 'alpha6': 14.0})
compare_values(ref_pbe_d3zero[0], variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene-Ethyne -D3 (zero)')   #TEST
mA = eneyne.extract_subsets(1)
mA.run_dftd3('b3lyp', 'd3zero', {'s6': 1.0,  's8': 0.722, 'sr6': 1.217, 'alpha6': 14.0})
compare_values(ref_pbe_d3zero[1], variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (zero)')          #TEST
mB = eneyne.extract_subsets(2)
mB.run_dftd3('b3lyp', 'd3zero', {'s6': 1.0,  's8': 0.722, 'sr6': 1.217, 'alpha6': 14.0})
compare_values(ref_pbe_d3zero[2], variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethyne -D3 (zero)')          #TEST

eneyne.run_dftd3('b3lyp', 'd3bj', {'s6': 1.000, 's8':  0.7875, 'a1':  0.4289, 'a2': 4.4407})
compare_values(ref_pbe_d3bj[0], variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene-Ethyne -D3 (bj)')       #TEST
mA = eneyne.extract_subsets(1)
mA.run_dftd3('b3lyp', 'd3bj', {'s6': 1.000, 's8':  0.7875, 'a1':  0.4289, 'a2': 4.4407})
compare_values(ref_pbe_d3bj[1], variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (bj)')              #TEST
mB = eneyne.extract_subsets(2)
mB.run_dftd3('b3lyp', 'd3bj', {'s6': 1.000, 's8':  0.7875, 'a1':  0.4289, 'a2': 4.4407})
compare_values(ref_pbe_d3bj[2], variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethyne -D3 (bj)')              #TEST

eneyne.run_dftd3('b3lyp', 'd3', {'s6': 1.0,  's8': 0.722, 'sr6': 1.217, 'alpha6': 14.0})
compare_values(ref_pbe_d3zero[0], variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene-Ethyne -D3 (alias)')  #TEST
eneyne.run_dftd3('b3lyp', 'd', {'s6': 0.75})
compare_values(ref_pbe_d2[0], variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene-Ethyne -D (alias)')       #TEST
eneyne.run_dftd3('b3lyp', 'd2', {'s6': 0.75})
compare_values(ref_pbe_d2[0], variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene-Ethyne -D2 (alias)')      #TEST

print('  cast-up, -D correction from C-side')                                                         #TEST
set basis_guess sto-3g
energy('b3lyp-d3bj')
compare_values(ref_d3bj[2], variable('DISPERSION CORRECTION ENERGY'), 7, 'Ethene -D3 (calling dftd3 -bj)')      #TEST


