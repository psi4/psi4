#! External potential calculation involving a TIP3P water and a QM water.
#! Finite different test of the gradient is performed to validate forces.

molecule water {
  0 1
  O  -0.778803000000  0.000000000000  1.132683000000
  H  -0.666682000000  0.764099000000  1.706291000000
  H  -0.666682000000  -0.764099000000  1.706290000000
  symmetry c1
  no_reorient
  no_com
}

# This molecule defined here only to trip up the driver
#   Removing the interloper molecule and optionally removing the "molecule=water"
#   arguments below would produce exactly the same result.
molecule interloper {
H
H 1 1.0
}

# Define a TIP3P water as the external potential
# Apr 2022: QMMM object directly is outdated -- instead pass list in Bohr as kwarg
upgrade_helper_raised = False
try:
    Chrgfield = QMMM()
    Chrgfield.extern.addCharge(-0.834,1.649232019048,0.0,-2.356023604706)
    Chrgfield.extern.addCharge(0.417,0.544757019107,0.0,-3.799961446760)
    Chrgfield.extern.addCharge(0.417,0.544757019107,0.0,-0.912085762652)
    psi4.set_global_option_python('EXTERN', Chrgfield.extern)
except UpgradeHelper as e:
    if "QMMMbohr" in str(e):
        upgrade_helper_raised = True
compare(True, upgrade_helper_raised, "avert old QMMM syntax")

import numpy as np
external_potentials = [
    [-0.834, np.array([1.649232019048,0.0,-2.356023604706]) / psi_bohr2angstroms],
    [ 0.417, np.array([0.544757019107,0.0,-3.799961446760]) / psi_bohr2angstroms],
    [ 0.417, np.array([0.544757019107,0.0,-0.912085762652]) / psi_bohr2angstroms]]

set {
    scf_type df
    d_convergence 12
    basis 6-31G*
}

fd_grad = gradient('scf', molecule=water, dertype=0, external_potentials=external_potentials)
fd_ener = psi4.variable('CURRENT ENERGY')
an_grad = gradient('scf', molecule=water, external_potentials=external_potentials)
an_ener = psi4.variable('CURRENT ENERGY')

compare_matrices(an_grad, fd_grad, 5, "Finite difference (3-pt.) vs. analytic gradient to 10^-5") #TEST
compare_values(-76.0194112285529968, fd_ener, 6, 'Finite difference energy')  #TEST
compare_values(-76.0194112285529968, an_ener, 6, 'Analytic energy')  #TEST

no_extern_grad_xptd = [                                #TEST
 [-3.61281240e-03, -4.93441226e-07, -1.84830343e-02],  #TEST
 [ 1.80644240e-03,  1.27352333e-02,  9.24171070e-03],  #TEST
 [ 1.80637000e-03, -1.27347399e-02,  9.24132361e-03]]  #TEST

no_extern_grad_cptd = gradient("scf", molecule=water)
compare_values(no_extern_grad_xptd, no_extern_grad_cptd, 5, "analytic gradient w/o external potential")  #TEST
