#! Intercalls among python wrappers- database, cbs, optimize, energy, etc.
#! Though each call below functions individually, running them all in sequence or
#! mixing up the sequence is aspirational at present.
#! Also aspirational is using the intended types of gradients. !nosample

ref_DB_E = 0.016075135344  #TEST
ref_DB_CBS_E = 0.034877478903  #TEST
ref_CBS_E = -1.148830624581  #TEST
ref_CBS_E_postopt = -1.17444630 #TEST
ref_OPT_E_0 = -1.140254531567  #TEST
ref_OPT_E_1 = -1.122959828171  #TEST
ref_DB_OPT_E_BASIC = 37075.200420269888  #TEST
ref_DB_OPT_E_S22 = 4.636003565957  #TEST
ref_OPT_CBS_E_0 = -1.174446301062  #TEST
ref_CDS_CBS_E_0 = -1.17526597  #TEST

molecule h2 {
    H
    H 1 1.00
}

set globals {
    BASIS 3-21G
    REFERENCE RHF
    SCF_TYPE PK
    PRINT 1
    E_CONVERGENCE 9
    D_CONVERGENCE 8
    R_CONVERGENCE 8
    JOBTYPE SP
    GUESS CORE
}
set cfour_symmetry false

banner('Test [1] optimize(cbs(energy()))')
optimize('c4-mp2',func=cbs,corl_basis='cc-pv[dt]z',corl_scheme=corl_xtpl_helgaker_2,delta_wfn='c4-ccsd',delta_basis='3-21g')
compare_values(ref_OPT_CBS_E_0, variable('CBS TOTAL ENERGY'), 5, "[1] Wrapper optimize(cbs(), dertype=0)")  #TEST

banner('Test [2] database(energy())')
set basis_guess sto-3g
set mp2_type conv
set df_scf_guess false
db('c4-mp2','RGC10',subset=['HeHe-0.85','HeHe-1.0'],tabulate=['mp2 total energy'])
compare_values(ref_DB_E, variable('RGC10 DATABASE ROOT-MEAN-SQUARE DEVIATION'), 5, "[2] Wrapper database() incl. castup")  #TEST
revoke_global_option_changed('BASIS_GUESS')

banner('Test [3] database(cbs(energy()))')
db('c4-mp2','RGC10',func=cbs,subset=['HeHe-0.85','HeHe-1.0'],tabulate=['mp2 total energy','current energy'],corl_basis='cc-pV[DT]Z',corl_scheme=corl_xtpl_helgaker_2,delta_wfn='c4-ccsd(t)',delta_basis='3-21g')
compare_values(ref_DB_CBS_E, variable('RGC10 DATABASE ROOT-MEAN-SQUARE DEVIATION'), 5, "[3] Wrapper database(cbs())")  #TEST

banner('Test [4] cbs(energy())')
set mp2_type df
# for h2 geom after optimization in [1]
cbs('mp2',corl_basis='cc-pv[dt]z',corl_scheme=corl_xtpl_helgaker_2,delta_wfn='c4-ccsd',delta_basis='3-21g',delta2_wfn='c4-ccsd(t)',delta2_wfn_lesser='c4-ccsd',delta2_basis='3-21g')
compare_values(ref_CBS_E_postopt, variable('CBS TOTAL ENERGY'), 7, "[4] Wrapper cbs()")  #TEST
set mp2_type conv

banner('Test [5] opt(energy())')
# TODO switch to mp2 once gradients thoroughly working again
optimize('c4-mp2',dertype='none')
compare_values(ref_OPT_E_0, variable('CURRENT ENERGY'), 7, "[5] Wrapper optimize(dertype=0)")  #TEST

banner('Test [6] opt(energy())')
optimize('c4-scf')
compare_values(ref_OPT_E_1, variable('CURRENT ENERGY'), 7, "[6] Wrapper optimize()")  #TEST

banner('Test [7] opt(energy())')
h2.reset_point_group('c1')
h2.fix_orientation(True)
h2.update_geometry()
# By pure chance there is a funny false super-tight convergence in the
# SCF below if we read the previous SCF orbitals.  I seem to have avoided
# it by upping E_CONVERGENCE to 9 above, we'll see if that holds -CDS
optimize('c4-mp2')
compare_values(ref_OPT_E_0, variable('CURRENT ENERGY'), 7, "[7] Wrapper optimize()")  #TEST

banner('Test [8] database(opt(energy()))')
db('c4-mp2','S22',db_func=optimize,subset=[1],tabulate=['mp2 total energy','current energy'])
compare_values(ref_DB_OPT_E_S22, variable('S22 DATABASE ROOT-MEAN-SQUARE DEVIATION'), 3, "[8] Wrapper database(optimize())")  #TEST

banner('Test [9] alias(cbs(energy()))')
sherrill_gold_standard()
compare_values(ref_CDS_CBS_E_0, variable("CBS TOTAL ENERGY"), 6, '[9] Aliased wrapper calling cbs()')  #TEST
