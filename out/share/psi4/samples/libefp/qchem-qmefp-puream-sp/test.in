#! EFP on mixed QM (water) and EFP (water + 2 * ammonia) system.
#! An EFP-only calc performed first to test vales against q-chem,
#! both for a native 6D and native 5D basis.

# from Q-Chem (new libefp Q-Chem, not Q-Chem home-brewed EFP)
qc_nre        =   9.1793879214                                         #TEST
qc_elst       =  -0.0168338165  # ELECTROSTATIC ENERGY                 #TEST
qc_indc_631   =  -0.0923997025  # POLARIZATION ENERGY                  #TEST
qc_indc_dz    =  -0.0845266725  # "                                    #TEST
qc_disp       =  -0.0029213180  # DISPERSION ENERGY                    #TEST
qc_exch       =   0.0127949942  # EXCHANGE-REPULSION ENERGY            #TEST
qc_qelst      =   0.1635272065  # QM-NUC/EFP ELECTROSTATIC ENERGY      #TEST
qc_efptot_631 =   0.0641673637  # TOTAL EFP ENERGY                     #TEST
qc_efptot_dz  =   0.0720403937  # "                                    #TEST
qc_efpcor     =   0.1565670662  # EFP CORRECTION TO SCF ENERGY         #TEST
qc_scftot_631 = -76.0058354285  # Total energy in the final basis set  #TEST
qc_scftot_dz  = -76.0237793795  # "                                    #TEST


molecule qmefp {
# QM fragment
0 1
O    0         0.0   0.118720
H   -0.753299, 0.0, -0.474880
H    0.753299, 0.0, -0.474880
# EFP as EFP fragments
--
efp water
    -2.13972    1.28964   -0.96418
    -2.66865    0.51034   -1.14473
    -1.33300    0.93113   -0.58956
--
efp ammonia
     0.98792    1.87681    2.85174
     1.68798    1.18856    3.09517
     1.45873    2.55904    2.27226
--
efp ammonia
    -4.12794   -0.92466   -1.28394
    -4.69278   -1.09557   -2.10539
    -3.59191   -1.76923   -1.13470
}

set basis 6-31g*
set e_convergence 12
set d_convergence 12
set scf_type pk
energy('scf')
print_variables()

print('      basis 6-31G*')
compare_values(qc_nre, qmefp.nuclear_repulsion_energy(), 6, 'QM NRE')  #TEST
compare_values(qc_elst + qc_qelst, variable('EFP ELST ENERGY'), 6, 'Tot Elst')  #TEST
compare_values(qc_disp, variable('EFP DISP ENERGY'), 6, 'efp Disp')  #TEST
compare_values(qc_exch, variable('EFP EXCH ENERGY'), 6, 'efp Exch')  #TEST
compare_values(qc_efpcor, variable('EFP ELST ENERGY') + variable('EFP EXCH ENERGY') + variable('EFP DISP ENERGY'), 6, 'Corr EFP')  #TEST
compare_values(qc_indc_631, variable('EFP IND ENERGY'), 6, 'Tot Indc')  #TEST
compare_values(qc_efptot_631, variable('EFP TOTAL ENERGY'), 6, 'Tot EFP')  #TEST
compare_values(qc_scftot_631, variable('SCF TOTAL ENERGY'), 6, 'Tot SCF')  #TEST

clean()

set basis cc-pvdz
set e_convergence 10
set d_convergence 7
set guess sad
set scf_type pk
energy('scf')
print_variables()

print('      basis cc-pVDZ')
compare_values(qc_nre, qmefp.nuclear_repulsion_energy(), 6, 'QM NRE')  #TEST
compare_values(qc_elst + qc_qelst, variable('EFP ELST ENERGY'), 6, 'Tot Elst')  #TEST
compare_values(qc_disp, variable('EFP DISP ENERGY'), 6, 'efp Disp')  #TEST
compare_values(qc_exch, variable('EFP EXCH ENERGY'), 6, 'efp Exch')  #TEST
compare_values(qc_efpcor, variable('EFP ELST ENERGY') + variable('EFP EXCH ENERGY') + variable('EFP DISP ENERGY'), 6, 'Corr EFP')  #TEST
compare_values(qc_indc_dz, variable('EFP IND ENERGY'), 6, 'Tot Indc')  #TEST
compare_values(qc_efptot_dz, variable('EFP TOTAL ENERGY'), 6, 'Tot EFP')  #TEST
compare_values(qc_scftot_dz, variable('SCF TOTAL ENERGY'), 6, 'Tot SCF')  #TEST

