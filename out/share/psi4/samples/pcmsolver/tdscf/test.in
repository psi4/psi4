#! PCM TDSCF Ref. values from lsdaton test case: opa_hf_H2O_noneq_pcmsolver.out
#       Excitation              Transition Dipole Moments               Oscillator
#        Energies            x               y               z           Strengths
#  ===============================================================================
#       0.53739940      0.00000000     -0.00000000     -0.46873812      0.07871662
#       0.62328100     -0.29826571      0.00000000      0.00000000      0.03696573
#       0.62742027     -0.00000000     -0.00000000     -0.00000000      0.00000000
#       0.71034705     -0.00000000     -0.08459875      0.00000000      0.00338928
#       1.01071645     -0.00000000     -0.46594750     -0.00000000      0.14628913
#
# UHF comparison against other implementations:
#CPCM solvation model excitation energies of NH2 radical [eV]:
#(Same radii, epsilon, refraction index, probe radius in each program)
#
#state	PSI4	ORCA	G09
#1	2.43618	2.457	2.4411
#2	7.39834	7.203	7.3993
#3	9.11054	8.991	9.1777
#4	10.1063	9.848	10.1017
#5	10.2178	10.365	10.3305

exc_energies = [ #TEST
    0.53739940,  #TEST
    0.62328100, #TEST
    0.62742027, #TEST
    0.71034705, #TEST
    1.01071645, #TEST
] #TEST

osc_strengths = [ #TEST
    0.07871662, #TEST
    0.03696573, #TEST
    0.00000000, #TEST
    0.00338928, #TEST
    0.14628913, #TEST
] #TEST

ref_scf_energy = -74.069207686891 #TEST


molecule wat {
unit bohr
  O     0.00000   0.00000   0.00000
  H     0.55168   0.77340   0.00000
  H     0.55168  -0.77340   0.00000
}

set = {
    scf_type   pk
    basis      3-21G
    e_convergence 8
    pcm true
    maxiter 50
    tdscf_states 5
}

pcm = {
   Units=Angstrom
   Medium {
   SolverType = IEFPCM
   Solvent = Water
   Nonequilibrium = True
   }

   Cavity {
   Type = GePol
   Area = 0.3
   Mode = Implicit
   }
}

r_calc = []
e_calc = []
scf_energy = energy("TD-SCF")
print_variables()
compare_values(ref_scf_energy, scf_energy, 6, "PCM-SCF Energy") #TEST
for i in range(5):
    e_calc.append(variable(f'TD-HF ROOT 0 -> ROOT {i+1} EXCITATION ENERGY - A SYMMETRY'))
    r_calc.append(variable(f'TD-HF ROOT 0 -> ROOT {i+1} OSCILLATOR STRENGTH (LEN) - A SYMMETRY'))
compare_arrays(exc_energies, e_calc, 4, f'PCM EXCITATION ENERGY ') #TEST
compare_arrays(osc_strengths, r_calc, 4, f'PCM OSCILLATOR STRENGTH ') #TEST
