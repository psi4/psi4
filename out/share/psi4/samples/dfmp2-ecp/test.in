#! Ne-Xe dimer MP2 energies with ECP, with electrons correlated then frozen.

refnuc =   45.862024925                                                                  #TEST
refall = -457.47320868249                                                                #TEST
reffzc = -457.38127218548                                                                #TEST
reffHe = -457.47130951838                                                                #TEST
refEin =    0.00468169972                                                                #TEST

molecule dimer {
    0 1
    Ne 0.0 0.0 0.0
    --
    0 1
    Xe 0.0 0.0 3.0
}

set {
    basis def2-svp
    print 2
}

# All electrons on Ne correlated, all non-ECP electrons on Xe correlated
Eall = energy('mp2')
compare_values(refnuc, dimer.nuclear_repulsion_energy(), 8, "Nuclear repulsion energy")  #TEST
compare_values(refall, Eall, 8, "MP2 energy with all-electron Ne and ECP on Xe")         #TEST

set freeze_core true
set guess sad
# [He] electrons on Ne frozen, [Kr] electrons on Xe frozen
Efzc = energy('mp2')
compare_values(reffzc, Efzc, 8, "MP2 energy with frozen [He] and [Kr]")                  #TEST
Eint = energy('mp2',bsse_type=['cp'])
compare_values(refEin, Eint, 8, "MP2 CP interaction energy frozen [He] and [Kr]")        #TEST


set freeze_core false
set num_frozen_docc 1
set guess read
# [He] electrons on Ne frozen,  only ECP electrons on Xe frozen
EfHe = energy('mp2')
compare_values(reffHe, EfHe, 8, "MP2 energy with frozen [He] and ECP")                   #TEST

molecule ghne {
    0 1
    @Ne 0.0 0.0 0.0
    --
    0 1
    Xe 0.0 0.0 3.0
}

molecule ghxe {
    0 1
    Ne 0.0 0.0 0.0
    --
    0 1
    Gh(Xe) 0.0 0.0 3.0
}

set freeze_core true
set num_frozen_docc 0
set guess sad

Eghne = energy('mp2', molecule=ghne)
Eghxe = energy('mp2', molecule=ghxe)
compare_values(refEin, Efzc - Eghne - Eghxe, 8, "MP2 CP interaction energy frozen [He] and [Kr] by hand")  #TEST

molecule sbh3 {
0 1
   Sb         0.00000000      0.76521375      0.00000000
   H          1.43645600     -0.25507125      0.00000000
   H         -0.71822800     -0.25507125      1.24400700
   H         -0.71822800     -0.25507125     -1.24400700
}

set freeze_core 0
E, wfn = energy("mp2/def2-svp", return_wfn=True, molecule=sbh3)

compare_values(wfn.nfrzc(), 0, 1, "Number of frozen e- with freeze_core = 0")
compare_values(sum(wfn.doccpi()), 13, 1, "Number of occupied orbitals with freeze_core = 0")

set freeze_core 1
E, wfn = energy("mp2/def2-svp", return_wfn=True, molecule=sbh3)
compare_values(wfn.nfrzc(), 4, 1, "Number of frozen orbitals with freeze_core = 1")
compare_values(sum(wfn.doccpi()), 13, 1, "Number of occupied orbitals with freeze_core = 1")

molecule hi {
  0 1
  H 0 0 0
  I 0 0 3
}

set freeze_core -2
try:
    energy("mp2/def2-svp", molecule=hi)
    compare_values(0, 1, "Exception raised when ECP larger than requested freeze_core?")
except RuntimeError as e:
    compare_values(1, 1, "Exception raised when ECP larger than requested freeze_core?")

