#! SCF STO-3G geometry optimzation, with Z-matrix input

# These values are from a tightly converged QChem run

molecule h2o {
     O
     H 1 1.0
     H 1 1.0 2 104.5
# QChem optimized geometry
#O           0.000000    0.000000    0.138167
#H          -0.758081    0.000000   -0.497635
#H           0.758081    0.000000   -0.497635
}

set {
  diis false
  basis sto-3g
  e_convergence 10
  d_convergence 10
  scf_type pk
}

thisenergy = optimize('scf')


set basis cc-pvdz
set g_convergence gau_verytight
set geom_maxiter 2

convergence_error_set = False
try:
    optimize('scf')
except psi4.OptimizationConvergenceError as ex:
    convergence_error_set = True
    wfn_from_error = ex.wfn

# grab molecule from the optimization that ended in an error and print
#   geometry out to the output file. note that geometry is the next step the
#   optimizer would have taken, not the geometry of the last available SCF and
#   gradient.
mol_from_error = wfn_from_error.molecule()
mol_from_error.print_out()

compare_integers(1, int(convergence_error_set), 'opt() exit gracefully but truthfully')
compare_values(9.297919, wfn_from_error.molecule().nuclear_repulsion_energy(), 2, 'NRE from error exit')

# clean up scratch since optimization ended abruptly
psi4_io.set_specific_retention(1, False)
clean()
