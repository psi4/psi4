#! SCF DZ finite difference frequencies by energies for C4NH4

memory 250 mb

molecule c4nh4 {
  units angstrom
  -1 1
    C         0.000000000000     0.000000000000     1.119905811674
    N         0.000000000000     0.000000000000     2.310087277449
    C         0.000000000000     0.000000000000    -0.231085072523
    C        -0.781617287494     0.000000000000    -1.483869398827
    C         0.781617287494     0.000000000000    -1.483869398827
    H        -1.274488047821    -0.899961499592    -1.835960153318
    H        -1.274488047821     0.899961499592    -1.835960153318
    H         1.274488047821     0.899961499592    -1.835960153318
    H         1.274488047821    -0.899961499592    -1.835960153318
}

#These are the old reference values
## Test against analytic second derivatives from PSI3 (for now).
#anal_freqs.set(0, 0,  -184.0613)
#anal_freqs.set(0, 1,   236.5665)
#anal_freqs.set(0, 2,   601.8179)
#anal_freqs.set(0, 3,   663.5969)
#anal_freqs.set(0, 4,   667.0854)
#anal_freqs.set(0, 5,   895.5586)
#anal_freqs.set(0, 6,  1008.6894)
#anal_freqs.set(0, 7,  1008.9522)
#anal_freqs.set(0, 8,  1046.9718)
#anal_freqs.set(0, 9,  1160.1266)
#anal_freqs.set(0,10,  1161.1594)
#anal_freqs.set(0,11,  1215.7027)
#anal_freqs.set(0,12,  1225.2493)
#anal_freqs.set(0,13,  1600.6695)
#anal_freqs.set(0,14,  1622.1779)
#anal_freqs.set(0,15,  1673.4861)
#anal_freqs.set(0,16,  2239.4185)
#anal_freqs.set(0,17,  3171.5147)
#anal_freqs.set(0,18,  3182.4027)
#anal_freqs.set(0,20,  3244.2997)

#These are the new reference values, they are the finite difference results
ref_freqs = psi4.Vector(21)
ref_freqs.set(0, 0, -185.3806810)
ref_freqs.set(0, 1,  236.6736194)
ref_freqs.set(0, 2,  600.8861278)
ref_freqs.set(0, 3,  663.7373907)
ref_freqs.set(0, 4,  667.1277034)
ref_freqs.set(0, 5,  895.6058773)
ref_freqs.set(0, 6, 1009.3357983)
ref_freqs.set(0, 7,  1008.9476251)
ref_freqs.set(0, 8,  1047.0252516)
ref_freqs.set(0, 9, 1160.0942687)
ref_freqs.set(0,10,  1161.2390978)
ref_freqs.set(0,11,  1215.7764819)
ref_freqs.set(0,12, 1225.2606141)
ref_freqs.set(0,13,  1600.7766133)
ref_freqs.set(0,14,  1622.1707093)
ref_freqs.set(0,15,  1673.4406189)
ref_freqs.set(0,16,  2239.3784603)
ref_freqs.set(0,17,  3171.4980225)
ref_freqs.set(0,18,  3182.3588200)
ref_freqs.set(0,19, 3224.6209621)
ref_freqs.set(0,20, 3244.2534858)


a1_freqs = psi4.Vector(7)
a1_freqs.set(0, 0, ref_freqs[ 4])
a1_freqs.set(0, 1, ref_freqs[ 7])
a1_freqs.set(0, 2, ref_freqs[10])
a1_freqs.set(0, 3, ref_freqs[13])
a1_freqs.set(0, 4, ref_freqs[15])
a1_freqs.set(0, 5, ref_freqs[16])
a1_freqs.set(0, 6, ref_freqs[18])

a2_freqs = psi4.Vector(3)
a2_freqs.set(0, 0, ref_freqs[6])
a2_freqs.set(0, 1, ref_freqs[12])
a2_freqs.set(0, 2, ref_freqs[19])

b1_freqs = psi4.Vector(6)
b1_freqs.set(0, 0, ref_freqs[1])
b1_freqs.set(0, 1, ref_freqs[3])
b1_freqs.set(0, 2, ref_freqs[8])
b1_freqs.set(0, 3, ref_freqs[11])
b1_freqs.set(0, 4, ref_freqs[14])
b1_freqs.set(0, 5, ref_freqs[17])

b2_freqs = psi4.Vector(5)
b2_freqs.set(0, 0, ref_freqs[0])
b2_freqs.set(0, 1, ref_freqs[2])
b2_freqs.set(0, 2, ref_freqs[5])
b2_freqs.set(0, 3, ref_freqs[9])
b2_freqs.set(0, 4, ref_freqs[20])


# *** Test all frequencies by 3-pt formula.
set {
  basis dz
  d_convergence 11
  points 3
}

set findif {print 3}

scf_e, scf_wfn = frequencies('scf',dertype=0,irrep=2, return_wfn=True)
fd_freqs = scf_wfn.frequencies()
clean()

del fd_freqs

# *** Test frequencies by 5-pt formula for A1 irrep only.
molecule c4nh4 {
  units angstrom
  -1 1
    C         0.000000000000     0.000000000000     1.119905811674
    N         0.000000000000     0.000000000000     2.310087277449
    C         0.000000000000     0.000000000000    -0.231085072523
    C        -0.781617287494     0.000000000000    -1.483869398827
    C         0.781617287494     0.000000000000    -1.483869398827
    H        -1.274488047821    -0.899961499592    -1.835960153318
    H        -1.274488047821     0.899961499592    -1.835960153318
    H         1.274488047821     0.899961499592    -1.835960153318
    H         1.274488047821    -0.899961499592    -1.835960153318
}

set {
 basis dz
 points 5
 d_convergence 11    # necessary for guaranteeing accuracy down to 0.001 cm^-1
 disp_size 0.010
}

scf_e, scf_wfn = frequencies('scf', irrep=1, return_wfn=True)
fd_freqs = scf_wfn.frequencies()
clean()

del fd_freqs

# *** Test frequencies by 3-pt formula for A2 irrep only.
molecule c4nh4 {
  units angstrom
  -1 1
    C         0.000000000000     0.000000000000     1.119905811674
    N         0.000000000000     0.000000000000     2.310087277449
    C         0.000000000000     0.000000000000    -0.231085072523
    C        -0.781617287494     0.000000000000    -1.483869398827
    C         0.781617287494     0.000000000000    -1.483869398827
    H        -1.274488047821    -0.899961499592    -1.835960153318
    H        -1.274488047821     0.899961499592    -1.835960153318
    H         1.274488047821     0.899961499592    -1.835960153318
    H         1.274488047821    -0.899961499592    -1.835960153318
}

set {
 basis dz
 points 5
 d_convergence 11    # necessary for guaranteeing accuracy down to 0.001 cm^-1
 disp_size 0.010
}

scf_e, scf_wfn = frequencies('scf', irrep=2, return_wfn=True)
fd_freqs = scf_wfn.frequencies()
clean()

del fd_freqs


# *** Test frequencies by 3-pt formula for B1 irrep only.
molecule c4nh4 {
  units angstrom
  -1 1
    C         0.000000000000     0.000000000000     1.119905811674
    N         0.000000000000     0.000000000000     2.310087277449
    C         0.000000000000     0.000000000000    -0.231085072523
    C        -0.781617287494     0.000000000000    -1.483869398827
    C         0.781617287494     0.000000000000    -1.483869398827
    H        -1.274488047821    -0.899961499592    -1.835960153318
    H        -1.274488047821     0.899961499592    -1.835960153318
    H         1.274488047821     0.899961499592    -1.835960153318
    H         1.274488047821    -0.899961499592    -1.835960153318
}

set {
 basis dz
 points 5
 d_convergence 11    # necessary for guaranteeing accuracy down to 0.001 cm^-1
 disp_size 0.010
}

scf_e, scf_wfn = frequencies('scf', irrep=3, return_wfn=True)
fd_freqs = scf_wfn.frequencies()
clean()

del fd_freqs


# *** Test frequencies by 3-pt formula for B2 irrep only.
molecule c4nh4 {
  units angstrom
  -1 1
    C         0.000000000000     0.000000000000     1.119905811674
    N         0.000000000000     0.000000000000     2.310087277449
    C         0.000000000000     0.000000000000    -0.231085072523
    C        -0.781617287494     0.000000000000    -1.483869398827
    C         0.781617287494     0.000000000000    -1.483869398827
    H        -1.274488047821    -0.899961499592    -1.835960153318
    H        -1.274488047821     0.899961499592    -1.835960153318
    H         1.274488047821     0.899961499592    -1.835960153318
    H         1.274488047821    -0.899961499592    -1.835960153318
}

set {
 basis dz
 points 5
 d_convergence 11    # necessary for guaranteeing accuracy down to 0.001 cm^-1
 disp_size 0.010
}

scf_e, scf_wfn = frequencies('scf', irrep=4, return_wfn=True)
fd_freqs = scf_wfn.frequencies()

del fd_freqs

del a1_freqs
del a2_freqs
del b1_freqs
del b2_freqs
del ref_freqs

