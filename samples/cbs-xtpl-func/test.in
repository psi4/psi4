# NOTE: gradient calcs accessed through an alias to cbs (e.g., sherrill_gold_standard) aren't matching direct calls to cbs

molecule mol {
O
H 1 R
H 1 R 2 A
}

mol.R = 1.0
mol.A = 90.0

set g_convergence gau_verytight

E1 = energy(cbs, corl_wfn='mp2', corl_basis='cc-pV[DT]Z', delta_wfn='ccsd(t)', delta_basis='3-21g')
E2 = energy(sherrill_gold_standard, scf_basis='cc-pVTZ', corl_basis='cc-pV[DT]Z', delta_basis='3-21g')
compare_values(E1, E2, 5, 'Match gold_standard energy')  #TEST

G1 = gradient(cbs, corl_wfn='mp2', corl_basis='cc-pV[DT]Z', delta_wfn='ccsd(t)', delta_basis='3-21g')
G2 = gradient(sherrill_gold_standard, scf_basis='cc-pVTZ', corl_basis='cc-pV[DT]Z', delta_basis='3-21g')
compare_matrices(G1, G2, 5, 'Match gold_standard gradient')  #TEST

# Reset mol geometries
mol.R = 1.0
mol.A = 100.0
E = optimize(cbs, corl_wfn='mp2', corl_basis='cc-pV[DT]Z', delta_wfn='ccsd(t)', delta_basis='3-21g')
compare_values(-76.3707500218, E, 5, '[1a] opt(cbs, sherrill) energy')  #TEST
compare_values(0.960940174888, mol.R, 3, '[1b] opt(cbs, sherrill) bond')  #TEST
compare_values(103.436972667, mol.A, 2, '[1c] opt(cbs, sherrill) angle')  #TEST

# Reset mol geometries
mol.R = 1.0
mol.A = 100.0
E = optimize(sherrill_gold_standard, scf_basis='cc-pVTZ', corl_basis='cc-pV[DT]Z', delta_basis='3-21g')
compare_values(-76.3707500218, E, 5, '[2a] opt(sherrill) energy')  #TEST
compare_values(0.960940174888, mol.R, 3, '[2b] opt(sherrill) bond')  #TEST
compare_values(103.436972667, mol.A, 2, '[2c] opt(sherrill) angle')  #TEST

