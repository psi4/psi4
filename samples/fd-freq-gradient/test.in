#! STO-3G frequencies for H2O by finite-differences of gradients

molecule h2o {
  0 1
  O
  H 1 0.9894093
  H 1 0.9894093 2 100.02688
}

set {
  basis sto-3g
  d_convergence 11
  scf_type pk
}

anal_freqs = psi4.Vector(3)  #TEST
anal_freqs.set(0, 0, 2170.045) #TEST
anal_freqs.set(0, 1, 4140.001) #TEST
anal_freqs.set(0, 2, 4391.065) #TEST
a1_freqs = psi4.Vector(2)    #TEST
a1_freqs.set(0, 0, anal_freqs[0]) #TEST
a1_freqs.set(0, 1, anal_freqs[1]) #TEST
b2_freqs = psi4.Vector(1)       #TEST
b2_freqs.set(0, 0, anal_freqs[2]) #TEST


# Compute all frequencies with default 3-point formula.
scf_e, scf_wfn = frequencies('scf', dertype=1, return_wfn=True)

fd_freqs = scf_wfn.frequencies()               #TEST
compare_vectors(anal_freqs, fd_freqs, 1,       #TEST
 "Analytic vs. finite-difference (3-pt.) frequencies from gradients to 0.1 cm^-1") #TEST
del fd_freqs   #TEST


# Compute A1 frequencies only.
scf_e, scf_wfn = frequencies('scf', dertype=1, irrep=1, return_wfn=True)

fd_freqs = scf_wfn.frequencies()               #TEST
compare_vectors(a1_freqs, fd_freqs, 1,         #TEST
 "Analytic vs. finite-difference (3-pt.) A1 frequencies from gradients to 0.1 cm^-1") #TEST
del fd_freqs   #TEST


# Compute B2 frequency only.
scf_e, scf_wfn = frequencies('scf', dertype=1, irrep=4, return_wfn=True)

fd_freqs = scf_wfn.frequencies()               #TEST
compare_vectors(b2_freqs, fd_freqs, 1,         #TEST
 "Analytic vs. finite-difference (3-pt.) B2 frequencies from gradients to 0.1 cm^-1") #TEST
del fd_freqs   #TEST


# Compute all frequencies with 5-point formula.
set findif { points 5 }

scf_e, scf_wfn = frequencies('scf', dertype=1, return_wfn=True)

fd_freqs = scf_wfn.frequencies()               #TEST
compare_vectors(anal_freqs, fd_freqs, 2,       #TEST
 "Analytic vs. finite-difference (5-pt.) frequencies from gradients to 0.01 cm^-1") #TEST
del fd_freqs   #TEST

del a1_freqs #TEST
del b2_freqs #TEST
del anal_freqs #TEST

clean()

