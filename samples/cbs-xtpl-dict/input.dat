#! Extrapolated water energies
import numpy as np


molecule h2o {
    O
    H 1 1.0
    H 1 1.0 2 104.5
}

# Use DF to save some time
set {
    scf_type      df
    mp2_type      df
    cc_type       df
    e_convergence 7
    reference     rhf
}

h2o.update_geometry()

# SCF TESTS
scf_dz = energy(cbs, cbs_metadata = [{"wfn": "hf", "basis": "cc-pVDZ"}])

scf_adtz = energy(cbs, cbs_metadata = [{"wfn": "hf", "basis": "aug-cc-pV[2T]Z"}])


# MP2 TESTS
mp2_atz = energy(cbs, cbs_metadata = [{"wfn": "mp2", "basis": "aug-cc-pVTZ"}])

mp2_adtz = energy(cbs, cbs_metadata = [{"wfn": "hf", "basis": "aug-cc-pvtz"},
                                       {"wfn": "mp2", "basis": "aug-cc-pv[dt]z"}])

# D:CCSD(T) TESTS

cbs_dtz = energy(cbs, cbs_metadata = [{"wfn": "hf", "basis": "cc-pvtz"},
                                      {"wfn": "mp2", "basis": "cc-pv[dt]z"},
                                      {"wfn": "ccsd(t)", "basis": "cc-pvdz"}])

cbs_no_scf = energy(cbs, cbs_metadata=[{"wfn": "mp2", "basis": "cc-pv[dt]z"},
                                       {"wfn": "ccsd(t)", "basis": "cc-pvdz"}])


# Options test
set freeze_core True

ae_dtz = energy(cbs, cbs_metadata = [{"wfn": "hf", "basis": "cc-pvtz"},
                                      {"wfn": "mp2", "basis": "cc-pv[dt]z"},
                                      {"wfn": "mp2", "basis": "cc-pvdz",
                                       "options": {"freeze_core": "False"}}])
                                       

b_lo  = energy(cbs, cbs_metadata = [{"wfn": "mp2", "basis": "cc-pvtz", "stage": "corr"},
                                    {"wfn": "mp2", "wfn_lo": "mp2", 
                                     "basis": "aug-cc-pvdz", "basis_lo": "cc-pvdz", "stage": "diff"}])
