[pytest]
minversion = 7.0
addopts = --import-mode=importlib

# for pythonpath, "tests/pytests" is for running from repo at <psi4>/pytest.ini
# for pythonpath, "tests" is for running from installed at CMAKE_INSTALL_PREFIX/CMAKE_INSTALL_LIBDIR/CMAKE_PYMOD_LIBDIR/psi4/pytest.ini
pythonpath =
    tests/pytests
    tests

testpaths =
    tests

markers = 
    psi: "test defined in Psi4 codebase"
    cli: "test also defined in CTest, usually in PSIthon"
    api: "test only defined for PyTest, usually in PsiAPI"

    smoke
    quick
    long
    slow: """marks tests as slow (deselect with '-m "not slow"')"""
    shorttests
    longtests
    nonroutine: """stdsuite tests safe to skip. includes module fd tests and also the fci method."""

    aediis
    alpha
    cart: "test geometries are purely numerical Cartesians and no Z-matrices"
    cas
    casscf
    cbs: "tests that run through the complete_basis_set aka composite wrapper"
    cc
    cdomp2
    check_triplet
    cepa
    ci
    cisd
    cubeprop
    dct
    df: "tests that employ density-fitting"
    dfccd
    dfccd-grad
    dfccdl
    dfccsdat
    dfccsdt
    dfccsd-grad
    dfccsd-t-grad
    dfccsd
    dfccsdt-grad
    dfccsdl
    dfep2
    dfocc
    dfomp2
    dfomp2p5
    dfomp3
    dfmp2
    dfscf
    dft
    dipole
    direct-scf
    dlpno
    docs
    ecp: "tests that use effective core potentials"
    eom
    extern: "tests that use the ExternalPotential object"
    fci
    fcidump
    findif
    fnocc
    frac
    freq
    fsapt
    gga
    ghosts
    gradient: "tests that run 1st-derivatives wrt energy"
    hessian: "tests that run 2nd-derivatives wrt energy"
    hf
    hyb_gga
    hyb_gga_lrc
    json
    lccd
    lda
    mcscf
    minitests
    misc
    mints
    mom
    mp2
    nbody: "tests that use the nbody aka manybody wrapper"
    noc1
    numpy
    occ
    olccd
    omp
    opt
    pasture
    properties
    psimrcc
    pte
    qcsk
    rasci
    restricted_singlet
    restricted_triplet
    RPA
    sapt
    scf
    soscf
    solver
    stability
    stress
    TDA
    tutorial: "tests providing a brief introduction to Psi4 features"
    tdscf
    uhf
    unittest
    unrestricted
    x2c

    addon: "tests require external non-required software"
    
    mp2d: "tests using MP2D software; skip if unavailable"
    dftd3: "tests using DFTD3 -or- s-dftd3 software; skip if neither available"
    s-dftd3: "tests using s-dftd3 software; skip if unavailable"
    classic-dftd3: "tests using DFTD3 software; skip if unavailable"
    cfour
    gcp: "tests using GCP -or- mctc-gcp software; skip if neither available"
    dftd4: "tests using DFTD4 software; skip if unavailable"
    
    dftd3_321
    memory_profiler
    networkx

    
    adcc: "tests using ADCconnect software; skip if unavailable"
    ambit: "tests using ambit software; skip if unavailable"
    bse: "tests using basis_set_exchange software; skip if unavailable"
    cct3
    chemps2: "tests using CheMPS2 software; skip if unavailable"
    cppe: "tests using cppe software; skip if unavailable"
    ddx: "tests using pyddx software; skip if unavailable"
    dkh: "tests using dkh software; skip if unavailable"
    ecpint: "tests using ecpint software; skip if unavailable"
    libefp: "tests using LibEFP software; skip if unavailable"
    erd: "tests using ERD software; skip if unavailable"
    fockci: "tests using XX software; skip if unavailable"
    forte
    gdma: "tests using gdma software; skip if unavailable"
    gpu_dfcc
    geometric: "tests using geomeTRIC software; skip if unavailable"
    ipi: "tests using i-PI software; skip if unavailable"
    mdi
    mrcc
    openfermionpsi4
    pcmsolver: "tests using PCMSolver software; skip if unavailable"
    psixas
    pywrap
    resp: "tests using resp software; skip if unavailable"
    simint: "tests using simint software; skip if unavailable"
    snsmp2
    v2rdm_casscf
    qcdb
    qcfractal: "tests suing QCFractal software; skip if unavailable"
    qcportal: "tests suing QCPortal software; skip if unavailable"
    psi4

